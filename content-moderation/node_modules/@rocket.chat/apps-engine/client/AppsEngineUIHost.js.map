{"version":3,"sources":["src/client/AppsEngineUIHost.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,2CAAyC;AACzC,6CAKsB;AAItB;;GAEG;AACH;IAMI;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IACD;;OAEG;IACI,UAAU;QACb,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAO,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE;YAC1D,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAU,CAAC,EAAE;gBAClC,OAAO;aACV;YAED,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;YAElC,MAAM,EAAE,CAAC,sBAAU,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;YAE9C,QAAQ,MAAM,EAAE;gBACZ,KAAK,gCAAmB,CAAC,aAAa;oBAClC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;gBAClE,KAAK,gCAAmB,CAAC,aAAa;oBAClC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;aACrE;QACL,CAAC,CAAA,CAAC,CAAC;IACP,CAAC;IASD;;;;;OAKG;IACW,YAAY,CAAC,MAA2B,EAAE,EAAU,EAAE,IAAsB;;YACtF,IAAI,CAAC,IAAI,CAAC,mBAAmB,YAAY,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,YAAY,aAAa,CAAC,EAAE;gBAC1G,OAAO;aACV;YAED,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;gBACjC,CAAC,sBAAU,CAAC,EAAE;oBACV,EAAE;oBACF,MAAM;oBACN,OAAO,EAAE,IAAI;iBACS;aAC7B,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC;KAAA;CACJ;AAzDD,4CAyDC","file":"AppsEngineUIHost.js","sourcesContent":["import { MESSAGE_ID } from './constants';\nimport {\n    AppsEngineUIMethods,\n    IAppsEngineUIResponse,\n    IExternalComponentRoomInfo,\n    IExternalComponentUserInfo,\n} from './definition';\n\ntype HandleActionData = IExternalComponentUserInfo | IExternalComponentRoomInfo;\n\n/**\n * Represents the host which handles API calls from external components.\n */\nexport abstract class AppsEngineUIHost {\n    /**\n     * The message emitter who calling the API.\n     */\n    private responseDestination!: Window;\n\n    constructor() {\n        this.initialize();\n    }\n    /**\n     * initialize the AppClientUIHost by registering window `message` listener\n     */\n    public initialize() {\n        window.addEventListener('message', async ({ data, source }) => {\n            if (!data.hasOwnProperty(MESSAGE_ID)) {\n                return;\n            }\n\n            this.responseDestination = source;\n\n            const { [MESSAGE_ID]: { action, id } } = data;\n\n            switch (action) {\n                case AppsEngineUIMethods.GET_USER_INFO:\n                    this.handleAction(action, id, await this.getClientUserInfo());\n                case AppsEngineUIMethods.GET_ROOM_INFO:\n                    this.handleAction(action, id, await this.getClientRoomInfo());\n            }\n        });\n    }\n    /**\n     * Get the current user's information.\n     */\n    public abstract async getClientUserInfo(): Promise<IExternalComponentUserInfo>;\n    /**\n     * Get the opened room's information.\n     */\n    public abstract async getClientRoomInfo(): Promise<IExternalComponentRoomInfo>;\n    /**\n     * Handle the action sent from the external component.\n     * @param action the name of the action\n     * @param id the unique id of the  API call\n     * @param data The data that will return to the caller\n     */\n    private async handleAction(action: AppsEngineUIMethods, id: string, data: HandleActionData): Promise<void> {\n        if ((this.responseDestination instanceof MessagePort) || (this.responseDestination instanceof ServiceWorker)) {\n            return;\n        }\n\n        this.responseDestination.postMessage({\n            [MESSAGE_ID]: {\n                id,\n                action,\n                payload: data,\n            } as IAppsEngineUIResponse,\n        }, '*');\n    }\n}\n"]}