{"version":3,"sources":["src/definition/metadata/RocketChatAssociations.ts"],"names":[],"mappings":";;AAAA,IAAY,0BAQX;AARD,WAAY,0BAA0B;IAClC,2CAAa,CAAA;IACb,uDAAyB,CAAA;IACzB,iDAAmB,CAAA;IACnB,mEAAqC,CAAA;IACrC,2CAAa,CAAA;IACb,2CAAa,CAAA;IACb,2CAAa,CAAA;AACjB,CAAC,EARW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAQrC;AAED;IACI,YAAoB,KAAiC,EAAU,EAAU;QAArD,UAAK,GAAL,KAAK,CAA4B;QAAU,OAAE,GAAF,EAAE,CAAQ;IAAI,CAAC;IAEvE,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;CACJ;AAVD,kEAUC","file":"RocketChatAssociations.js","sourcesContent":["export enum RocketChatAssociationModel {\n    ROOM = 'room',\n    DISCUSSION = 'discussion',\n    MESSAGE = 'message',\n    LIVECHAT_MESSAGE = 'livechat-message',\n    USER = 'user',\n    FILE = 'file',\n    MISC = 'misc',\n}\n\nexport class RocketChatAssociationRecord {\n    constructor(private model: RocketChatAssociationModel, private id: string) { }\n\n    public getModel() {\n        return this.model;\n    }\n\n    public getID() {\n        return this.id;\n    }\n}\n"]}