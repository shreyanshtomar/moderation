{"version":3,"sources":["src/definition/rooms/IPostRoomUserJoined.ts"],"names":[],"mappings":"","file":"IPostRoomUserJoined.js","sourcesContent":["import { IHttp, IPersistence, IRead } from '../accessors';\nimport { IRoomUserJoinedContext } from './IRoomUserJoinedContext';\n\n/**\n * Event interface that allows an app to\n * register as a handler of the `IPostRoomUserJoined`\n * event\n *\n * This event is triggered after an user succcessfully joined\n * a room.\n *\n * This event does not allow an app to prevent any action from\n * happening. For that, see its \"pre counterpart(s)\":\n *\n * - IPreRoomUserJoined\n */\nexport interface IPostRoomUserJoined {\n    executePostRoomUserJoined(context: IRoomUserJoinedContext, read: IRead, http: IHttp, persistence: IPersistence): Promise<void>;\n}\n"]}