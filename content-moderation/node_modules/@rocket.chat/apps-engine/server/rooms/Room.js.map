{"version":3,"sources":["src/server/rooms/Room.ts"],"names":[],"mappings":";;AAIA,MAAM,cAAc,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAEpD;IAmCI,YAAmB,IAAW,EAAE,OAAmB;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE1B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,EAAE;YACxC,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,OAAO;SACjB,CAAC,CAAC;IACP,CAAC;IAzBD;;OAEG;IACH,IAAW,SAAS;QAChB,gBAAgB;QAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,EAAE,CAAC,iBAAiB,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC3G;QAED,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,IAAW,SAAS,CAAC,SAAS;QAC1B,OAAO;IACX,CAAC;IAaD,IAAI,KAAK;QACL,OAAO;YACH,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;YACjD,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC;IACN,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CACJ;AA5ED,oBA4EC","file":"Room.js","sourcesContent":["import { IRoom, RoomType } from '../../definition/rooms';\nimport { IUser } from '../../definition/users';\nimport { AppManager } from '../AppManager';\n\nconst PrivateManager = Symbol('RoomPrivateManager');\n\nexport class Room implements IRoom {\n    public id: string;\n    public displayName?: string;\n    public slugifiedName: string;\n    public type: RoomType;\n    public creator: IUser;\n    public isDefault?: boolean;\n    public isReadOnly?: boolean;\n    public displaySystemMessages?: boolean;\n    public messageCount?: number;\n    public createdAt?: Date;\n    public updatedAt?: Date;\n    public lastModifiedAt?: Date;\n    public customFields?: { [key: string]: any };\n    public userIds?: Array<string>;\n    private _USERNAMES: Array<string>;\n\n    private [PrivateManager]: AppManager;\n\n    /**\n     * @deprecated\n     */\n    public get usernames(): Array<string> {\n        // Get usernames\n        if (!this._USERNAMES) {\n            this._USERNAMES = this[PrivateManager].getBridges().getInternalBridge().getUsernamesOfRoomById(this.id);\n        }\n\n        return this._USERNAMES;\n    }\n\n    public set usernames(usernames) {\n        return;\n    }\n\n    public constructor(room: IRoom, manager: AppManager) {\n        Object.assign(this, room);\n\n        Object.defineProperty(this, PrivateManager, {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: manager,\n        });\n    }\n\n    get value(): object {\n        return {\n            id: this.id,\n            displayName: this.displayName,\n            slugifiedName: this.slugifiedName,\n            type: this.type,\n            creator: this.creator,\n            isDefault: this.isDefault,\n            isReadOnly: this.isReadOnly,\n            displaySystemMessages: this.displaySystemMessages,\n            messageCount: this.messageCount,\n            createdAt: this.createdAt,\n            updatedAt: this.updatedAt,\n            lastModifiedAt: this.lastModifiedAt,\n            customFields: this.customFields,\n            userIds: this.userIds,\n        };\n    }\n\n    public toJSON() {\n        return this.value;\n    }\n\n    public toString() {\n        return this.value;\n    }\n\n    public valueOf() {\n        return this.value;\n    }\n}\n"]}